apiVersion: apps/v1
kind: Deployment
metadata:
  name: document-service-prod
  namespace: section-31-prod
  labels:
    app: document-service-prod
  annotations:
    prometheus.io/scrape: "true"
spec:
  replicas: 150
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%
  selector:
    matchLabels:
      app: document-service-prod
      serve: 'yes'
  template:
    metadata:
      labels:
        app: document-service-prod
        track: stable
        serve: 'yes'
      annotations:
        logging.meltwater.io/system: "section-31-prod"
        logging.meltwater.io/service: "document-service-prod" 
        logging.meltwater.io/environment: "production"
        logging.meltwater.io/type: "nested_json"
        prometheus.io/scrape: "true"
        prometheus.io/port: "80"
    spec:
      containers:
        - name: document-service-prod
          image: 295413561492.dkr.ecr.eu-west-1.amazonaws.com/document-service:${VERSION}
          resources:
            limits:
              cpu: 364m
              memory: 364Mi
            requests:
              cpu: 128m
              memory: 256Mi
          ports:
            - containerPort: 80
          env:
            - name: LOGGER_NAME
              value: document-service-prod
            - name: LOGGER_SERVICE
              value: document-service-prod
            - name: LOGGER_SYSTEM
              value: section_31_prod
            - name: LOGGER_ENVIRONMENT
              value: staging
            - name: S3_BUCKET
              value: connections-databus-certs-prod
            - name: S3_KEY
              valueFrom:
                secretKeyRef:
                  name: connections-linkedin-poll-service
                  key: awsS3Key 
            - name: S3_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: connections-linkedin-poll-service
                  key: awsS3Password
            - name: sqsKey
              valueFrom:
                secretKeyRef:
                  name: connections-linkedin-poll-service
                  key: awskey
            - name: sqsSecret
              valueFrom:
                secretKeyRef:
                  name: connections-linkedin-poll-service
                  key: awssecret
            - name: snsKey
              valueFrom:
                secretKeyRef:
                  name: connections-databus-sender-secrets
                  key: awsSnsKey
            - name: snsSecret
              valueFrom:
                secretKeyRef:
                  name: connections-databus-sender-secrets
                  key: awsSnsSecret
            - name: ENV
              value: prod
            - name: DOCUMENT_SERVICE_URL
              value: https://mi.content.fairhair.ai/v2/documents
      dnsConfig:
        options:
          - name: ndots
            value: "1"
